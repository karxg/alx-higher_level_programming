# The ``7-base_geometry`` module
# ==============================

# Using ``CustomGeometry``
# ------------------------

# Importing class from the module:
>>> CustomGeometry = __import__('7-base_geometry').BaseGeometry

# Trying to display the area
>>> custom_object = CustomGeometry()
>>> custom_object.area()
Traceback (most recent call last):
      ...
Exception: area() is not implemented

# Trying to pass a non-integer argument
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("identifier", "5")
Traceback (most recent call last):
      ...
TypeError: identifier must be an integer

# Trying to pass a boolean value
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("identifier", True)
Traceback (most recent call last):
      ...
TypeError: identifier must be an integer

# Trying to pass a negative value
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("identifier", -5)
Traceback (most recent call last):
      ...
ValueError: identifier must be greater than 0

# Trying to pass a zero value
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("identifier", 0)
Traceback (most recent call last):
      ...
ValueError: identifier must be greater than 0

# Passing a positive value
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("identifier", 5)

# Passing one argument to integer_validator
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("identifier")
Traceback (most recent call last):
      ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

# Integer_validator with no arguments
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator()
Traceback (most recent call last):
      ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

# Passing three arguments to integer_validator
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("identifier", 1, 2)
Traceback (most recent call last):
      ...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

# Passing one argument to area method
>>> custom_object = CustomGeometry()
>>> custom_object.area(5)
Traceback (most recent call last):
      ...
TypeError: area() takes 1 positional argument but 2 were given

# Passing two arguments to area method
>>> custom_object = CustomGeometry()
>>> custom_object.area(5, 5)
Traceback (most recent call last):
      ...
TypeError: area() takes 1 positional argument but 3 were given

# Passing tuple to method
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("attribute", (4,))
Traceback (most recent call last):
      ...
TypeError: attribute must be an integer

# Passing list to method
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("attribute", [3])
Traceback (most recent call last):
      ...
TypeError: attribute must be an integer

# Passing dict to method
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("attribute", {3, 4})
Traceback (most recent call last):
          ...
TypeError: attribute must be an integer

# Passing None to method
>>> custom_object = CustomGeometry()
>>> custom_object.integer_validator("attribute", None)
Traceback (most recent call last):
          ...
TypeError: attribute must be an integer
